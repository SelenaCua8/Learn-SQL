1. ¬øQu√© es un sistema de gesti√≥n de bases de datos relacionales?

Un sistema de gesti√≥n de bases de datos relacionales (SGBDR) hace referencia al software utilizado para almacenar, gestionar y consultar datos.
Los datos se guardan en tablas y se pueden vincular a otros conjuntos de datos a partir de informaci√≥n compartida (por eso son ‚Äúrelacionales‚Äù).

2. ¬øCu√°l es la diferencia entre un sistema de gesti√≥n de bases de datos relacionales y un sistema de gesti√≥n de bases de datos?

Estas son las diferencias principales entre un sistema de gesti√≥n de bases de datos relacionales (SGBDR) y un sistema de gesti√≥n de bases de datos (SGBD):

Un SGBDR almacena datos en una tabla relacional con filas y columnas, mientras que un SGBD los almacena como un archivo.

Un SGBDR ofrece acceso a varios usuarios (incluso en interacciones del extremo cliente-servidor), mientras que un SGBD solo admite un usuario.

3. ¬øCu√°les son los sistemas de gesti√≥n de bases de datos relacionales m√°s usados?

Estos son algunos de los SGBDR m√°s usados:

Oracle Database

MySQL

Microsoft SQL Server

PostgreSQL

IBM DB2

SQLite

4. ¬øQu√© funci√≥n cumple SQL?

SQL es un lenguaje de programaci√≥n utilizado para llevar a cabo tareas relacionadas con los datos.
Es el lenguaje de programaci√≥n est√°ndar de todos los SGBDR. En estas bases de datos, SQL permite a los usuarios crear tablas, actualizar datos, realizar consultas y llevar a cabo an√°lisis.

5. ¬øCu√°l es la diferencia entre SQL y MySQL?

SQL es el lenguaje de programaci√≥n que se utiliza en los SGBDR, mientras que MySQL es un ejemplo de un SGBDR. MySQL fue uno de los primeros sistemas de base de datos con c√≥digo abierto en el mercado y contin√∫a vigente al d√≠a de hoy.

6. ¬øC√≥mo se crea una tabla en SQL?

El comando CREATE TABLE se utiliza para crear una tabla nueva en un SGBDR. El usuario debe indicar el nombre de la tabla, los nombres de las columnas y los tipos de datos. Tambi√©n sirve para crear copias de tablas ya implementadas.

7. ¬øC√≥mo se insertan fechas en SQL?

Con SQL, el tipo de datos DATE se utiliza para almacenar datos o valores de tiempo en una base de datos. El formato para insertar fechas puede variar de un SGBDR a otro (por lo general, se usa AAAA-MM-DD).

8. ¬øQu√© es una consulta?

Una consulta es una solicitud de datos o informaci√≥n que se env√≠a a una base de datos. Hay dos tipos importantes de consultas SQL:

Una consulta de selecci√≥n es una consulta que agrupa datos de una tabla con fines anal√≠ticos.

Una consulta de acci√≥n es una consulta que cambia los contenidos de la base de datos a partir de criterios indicados.

9. ¬øQu√© es una subconsulta?

Una subconsulta es una consulta anidada en otro enunciado que requiere varios pasos. La subconsulta ofrece a la consulta principal informaci√≥n adicional necesaria para ejecutar una tarea (por ejemplo, cuando una consulta depende de los resultados de otra).

10. ¬øC√≥mo se ejecuta una consulta de selecci√≥n en SQL?

Este es el proceso para ejecutar una consulta de selecci√≥n en SQL:

El enunciado SELECT se utiliza para especificar las columnas que necesitas consultar.

El enunciado FROM se utiliza para especificar la tabla que contiene los datos.

El enunciado WHERE se utiliza para filtrar los datos en funci√≥n de ciertas condiciones.

11. ¬øCu√°les son los tipos de consultas de acci√≥n m√°s importantes?

Hay varios enunciados SQL que ejecutan consultas de acci√≥n. Sus objetivos y procedimientos var√≠an de una a otra. Estas son algunas de las consultas de acci√≥n m√°s importantes:

UPDATE modifica el valor de los campos de una tabla.

DELETE elimina registros de una tabla.

CREATE TABLE crea una tabla nueva.

INSERT INTO a√±ade registros a la tabla.

12. ¬øQu√© son las restricciones?

En SQL, las restricciones son un conjunto de reglas o condiciones implementadas en un SGBDR para especificar los datos que se pueden insertar,
actualizar o eliminar en las tablas. El objetivo es garantizar la integridad de los datos y asegurarse de que la informaci√≥n almacenada en las tablas de la base de datos sea precisa.

13. ¬øQu√© son las operaciones de combinaci√≥n JOIN?

Estas operaciones combinan columnas con valores relacionados de dos o m√°s tablas para crear una tabla nueva. En SQL, hay cuatro tipos de operaciones JOIN importantes:

JOIN devuelve registros cuyos valores coinciden en ambas tablas.

LEFT JOIN devuelve todos los registros de la tabla izquierda y los registros coincidentes de la tabla derecha.

RIGHT JOIN devuelve todos los registros de la tabla derecha y los registros coincidentes de la tabla izquierda.

FULL JOIN devuelve todos los registros de ambas tablas.

14. ¬øQu√© funci√≥n cumplen los √≠ndices?

Un √≠ndice de SQL almacena partes importantes de una tabla para que las b√∫squedas sean m√°s √°giles y eficaces.
En lugar de buscar en toda la base de datos, los usuarios solo deber√°n consultar el √≠ndice cuando necesiten obtener datos. Por lo tanto, los √≠ndices mejoran el rendimiento de los SGBDR.

15. ¬øQu√© representa el valor NULL?

El valor NULL indica que el dato es desconocido. No es lo mismo que 0; si aparece un valor NULL, significa que no hay datos almacenados.

16. ¬øCu√°les son los distintos tipos de comandos SQL?


En SQL, los comandos se utilizan para llevar a cabo tareas espec√≠ficas en la base de datos. Hay cinco tipos importantes:

Los comandos de lenguaje de definici√≥n de datos (Data Definition Language, DDL) cambian la estructura de la base de datos.

Los comandos de lenguaje de manipulaci√≥n de datos (Data Manipulation Language, DML) modifican los datos en las tablas de la base de datos.

Los comandos de lenguaje de control de datos (Data Control Language, DCL) gestionan el acceso de los usuarios a la base de datos.

Los comandos de lenguaje de control de transacciones (Transaction Control Language, TCL) gestionan las transacciones que realizan los comandos DML.

Los comandos de lenguaje de consultas de datos (Data Query Language, DQL) recuperan informaci√≥n de la base de datos.

17. ¬øQu√© es un alias?

Un alias es un nombre temporal que se le asigna a una tabla o columna durante una consulta SQL. Su objetivo es disminuir la cantidad de c√≥digo necesario para la consulta, y, de este modo, ahorrar tiempo y reducir la carga de trabajo.

18. ¬øCu√°les son algunas de las funciones de agregamiento m√°s importantes?

Los valores agregados se utilizan para efectuar c√°lculos en un conjunto de valores a fin de obtener un solo valor. Estas son algunas de las funciones de agregamiento m√°s usadas:

AVG calcula el promedio de los valores.

COUNT cuenta la cantidad total de filas en una tabla.

MIN encuentra el valor m√≠nimo en una tabla.

MAX encuentra el valor m√°ximo en una tabla.

SUM calcula la suma de los valores.

19. ¬øQu√© son las propiedades ACID en SQL?

ACID es el acr√≥nimo de atomicidad, coherencia, aislamiento y durabilidad. Estas propiedades son fundamentales para garantizar la integridad de los datos durante una transacci√≥n.

Funci√≥n de cada propiedad:

Atomicidad: los cambios en los datos se realizan en una √∫nica operaci√≥n unificada.

Coherencia: los valores de los datos son coherentes al comienzo y al final de la transacci√≥n.

Aislamiento: una transacci√≥n no puede ver el estado intermedio de otra transacci√≥n.

Durabilidad: los cambios en los datos sobreviven a la transacci√≥n.

20. ¬øCu√°l es el significado de la clave principal en SQL?
Una clave principal es una columna (o un conjunto de columnas) que permite que cada fila de una base de datos se identifique de forma √∫nica. Las bases de datos SQL dan mucha importancia a las claves primarias.
Proporcionan a cada fila en una tabla de base de datos una identificaci√≥n √∫nica. Una clave principal puede constar de uno o m√°s campos, y solo puede haber una clave principal por tabla.

21. ¬øQu√© son los tipos de datos SQL?
Un tipo de datos es un atributo que describe el tipo de datos que un objeto puede almacenar, como cadenas binarias, datos num√©ricos, datos de caracteres, datos financieros, etc.ate y datos de tiempo, etc.

En SQL, los tipos de datos son catedivididos en los siguientes grupos:

N√∫meros exactos
Aproximadoate num√©ricos
Date y tiempo
Cadenas de caracteres
Cadenas de caracteres Unicode
cadenas binarias

22. ¬øD√≥nde se almacenan los nombres de usuario y las contrase√±as en SQL Server?
Los nombres de usuario y las contrase√±as se almacenan en los principales sys.server de la tabla SQL y en los inicios de sesi√≥n de sys.sql, respectivamente. Las contrase√±as no se almacenan en texto normal.

23. ¬øNULL es igual a 0 en SQL?
Un valor NULL en SQL denota un valor que no est√° disponible o no est√° asignado. Un espacio (' ') o zero (0) no son equivalentes al valor NULL. No puede comparar el valor NULL con ning√∫n otro valor utilizando operadores de comparaci√≥n 
como "=" o ">" ya que no puede ser igual o desigual a ning√∫n otro valor.

24. Analice la diferencia entre SQL y PL/SQL.
SQL y PL/SQL difieren en sus enfoques de manipulaci√≥n de bases de datos. SQL es un lenguaje declarativo para bases de datos relacionales, mientras que PL/SQL es un lenguaje de procedimientos que utiliza SQL para operaciones de bases de datos.

PL/SQL incluye variables y estructuras de control y puede ejecutar m√∫ltiples operaciones a la vez, lo que reduce el tr√°fico de la red. SQL est√° limitado a operaciones √∫nicas. PL/SQL ofrece datos de alta velocidad processing, del cual SQL carece.

25. Mencionar los diferentes tipos de relaciones en SQL. 
Imagine que tiene un modelo de datos con tablas y estas tablas est√°n conectadas o related entre s√≠. A menudo ver√°s l√≠neas que los conectan. Estas l√≠neas representan los tipos de relaciones entre las tablas.

Hay tres tipos principales de relaciones:

üî∑ Uno a muchos: Este es el tipo m√°s com√∫n. Imagine que tiene una lista de clientes y cada cliente est√° asociado.ated con una ciudad. Una ciudad puede tener muchos clientes, pero cada cliente pertenece a una sola ciudad.

üî∑ Muchos a muchos: Este tipo se utiliza cuando ambas tablas pueden tener m√∫ltiples entradas en ambos lados. Por ejemplo, piense en los empleados que llaman a los clientes. Un empleado puede llamar a muchos clientes y un cliente puede recibir
llamadas de muchos empleados. Cuando tienes "muchos" en ambos lados, es una relaci√≥n de muchos a muchos. Para manejar esto, a menudo necesitas una nueva tabla en el medio.

üî∑ Programa XNUMX a XNUMX: Esto rara vez se usa pero tiene su lugar. Imagine que desea almacenar los datos de los empleados y sus documentos de identidad v√°lidos. Cada empleado tiene un solo documento de identidad v√°lido y cada documento de identidad
pertenece a un solo empleado. Es una relaci√≥n uno a uno. Puede almacenar los datos del documento de identidad en un lugar separado.ate mesa y relate ellos usando una clave externa.

26. ¬øC√≥mo se elimina el duplicado?ate rows en SQL? 
Al trabajar con bases de datos SQL, puede encontrar duplicadosate rows en vuestras mesas. Esto puede suceder incluso si sigue las mejores pr√°cticas, como el uso de √≠ndices y claves primarias. Este art√≠culo analizar√° diferentes m√©todos para eliminar duplicados.ate rows
de una tabla SQL.

Usando la cl√°usula GROUP BY y HAVING
Identificar duplicadosate rows utilizando la cl√°usula GROUP BY.
Utilice COUNT para comprobar si hay duplicadosate ocurrencias.
Eliminar duplicadoates manteniendo solo una instancia de cada uno.
Uso de expresiones de tabla comunes (CTE)
Utilice la funci√≥n ROW_NUMBER() en un CTE.
Los datos de partici√≥n se basan en columnas espec√≠ficas.
Eliminar duplicadoates donde el n√∫mero de fila es greater que 1.
Uso de la funci√≥n RANGO
Utilice RANK() con la cl√°usula PARTITION BY.
Asigne identificaciones √∫nicas a rows independientemente del duplicidadates.
Borrar rows con rangos greater que 1.
Usando el paquete SSIS
Los servicios de integraci√≥n de SQL Server (SSIS) pueden automatizarate duplicidadate eliminaci√≥n.
Ordene datos utilizando un operador de clasificaci√≥n en SSIS.
Habilite la opci√≥n ‚ÄúEliminar rows con duplicoate opci√≥n ordenar valores‚Äù.
Almacene los datos limpios en una tabla de destino.
Es importante tener precauci√≥n al aplicar estos m√©todos a los datos de producci√≥n. Pru√©belos siempre en un entorno seguro antes de usarlos con datos en vivo.

Entonces, cuando est√©s dise√±ando una base de datos, entiendeandiCombinar estos tipos de relaciones le ayuda a decidir c√≥mo estructurar sus tablas y sus conexiones de forma eficaz. Es como descubrir c√≥mo encajan las piezas de un rompecabezas para 
representar con exactitud los datos del mundo real.ately.

27. ¬øCu√°les son algunas funciones SQL que se utilizan para manipular may√∫sculas y min√∫sculas? 
SQL proporciona varias funciones que le permiten manipularate may√∫sculas y min√∫sculas en cadenas. Algunas funciones SQL comunes para manipular may√∫sculas y min√∫sculas incluyen:

SUPERIOR(): Esta funci√≥n convierte todos los caracteres de una cadena a may√∫sculas.

SELECT UPPER('Hello World') AS UppercaseResult;

Salida: "HELLO WORLD"

M√ÅS BAJO(): Esta funci√≥n convierte todos los caracteres de una cadena a min√∫sculas.

SELECT LOWER('Hello World') AS LowercaseResult;

Salida: "hello world"

INITCAP(): Esta funci√≥n pone en may√∫scula la primera letra de cada palabra en una cadena.

SELECT INITCAP('hello world') AS InitCapResult;

Salida: "Hello World"

Estas funciones son √∫tiles para formatear y presentar datos de texto de manera coherente y legible en consultas e informes SQL.

28. Analice la diferencia entre CHAR y VARCHAR. 
Char y Varchar son tipos de datos en SQL que se utilizan para almacenar cadenas de caracteres, pero tienen caracter√≠sticas distintas:

Tipo de datos Char(n):

Almacena cadenas de caracteres de longitud fija.
Requiere una longitud especificada (n) para cada valor almacenado.
Utiliza una ubicaci√≥n de memoria est√°tica.
Cada car√°cter ocupa 1 byte de almacenamiento.
Adecuado cuando la longitud de la cuerda es conocida y consistente.
Varchar(n) Tipo de datos:

Almacena cadenas de caracteres de longitud variable.
Permite diferentes longitudes de cadena hasta una longitud m√°xima especificada (n).
Utiliza asignaci√≥n de memoria din√°mica.
Requiere extra bytes (t√≠picoally 2) para almacenar informaci√≥n de longitud.
apropiadoate cuando las longitudes de las cuerdas var√≠an.
Diferencias:

Char es para cadenas de longitud fija, mientras que Varchar es para cadenas de longitud variable.
Char usa memoria est√°tica, mientras que Varchar usa memoria din√°mica.
Char requiere 1 byte por car√°cter, mientras que Varchar usa 1 byte por car√°cter m√°s bytes adicionales para la longitud.
Char se adapta a situaciones con longitudes de cuerda consistentes, mientras que Varchar es flexible para diferentes longitudes.
En resumen, Char es como un r√≠gido. box para tus cuerdas, siempre del mismo tama√±o, mientras que Varchar es como una banda el√°stica, que se adapta a diferentes longitudes seg√∫n sea necesario.

